# Elemental

This was a library I wrote ages ago as part of an entirely different
project that does some similar things to the `@lumjs/dom` libraries.
I tried to integrate it with the Lum.js v4 library set, but decided to abandon
it and send it to my archives.

There's some cool ideas in this that could mesh nicely here.

I think refactored versions of the  `ElementalItem` and `ElementalCollection`
classes could be used as an alternative to the `extend` feature (and the two
could share a lot of the core functionalities.)

Refactoring the `@lumjs/dom/events` module to use the features from the 
`Elemental.EventHandler` class would be awesome.

I'm not sure what the finished result will look like yet as the two work in
very different ways. For `EEH` one `EventHandler` instance keeps track of
a whole set of events for a whole set of elements. While `domev` also has an
internal `EventHandler` class but it keeps track of a single event, and has a
list of plugins specifically for that single handler. I think we could use a 
top-level `EventHandler` class inspired by the `EEH` version. 
In turn an `EventRegistration` class could exist for each node/event 
combination, and would have the `EventHandler` as the parent object. 
Plugins would need to be adjusted to work with the new dual-class model.
